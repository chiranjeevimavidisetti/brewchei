{"version":3,"file":"static/js/221.c6205508.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-html-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/use-svg-visual-state.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-dom/dist/es/animation/utils/make-animation-instant.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/calc-child-stagger.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/feature-bundle.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`, \"max-css-var-depth\");\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n    getAnimatableNone: (v) => {\n        const parsed = color.parse(v);\n        parsed.alpha = 0;\n        return color.transform(parsed);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : color.test(v) ? color.getAnimatableNone(v) : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v) {\n        if (!this.passiveEffect) {\n            this.updateAndNotify(v);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone, microtask } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key]);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\", \"reduced-motion-disabled\");\n        }\n        this.parent?.addChild(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent?.removeChild(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    addChild(child) {\n        this.children.add(child);\n        this.enteringChildren ?? (this.enteringChildren = new Set());\n        this.enteringChildren.add(child);\n    }\n    removeChild(child) {\n        this.children.delete(child);\n        this.enteringChildren && this.enteringChildren.delete(child);\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n            this.scheduleRender();\n        });\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n    scheduleRenderMicrotask() {\n        microtask.render(this.render);\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addEventListener(\"change\", setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    const elementStyle = element.style;\n    let key;\n    for (key in style) {\n        // CSSStyleDeclaration has [index: number]: string; in the types, so we use that as key type.\n        elementStyle[key] = style[key];\n    }\n    // Write projection styles directly to element style\n    projection?.applyProjectionStyles(elementStyle, styleProp);\n    for (key in vars) {\n        // Loop over any CSS variables and assign those.\n        // They can only be assigned using `setProperty`.\n        elementStyle.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attributes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (typeof isValidProp !== \"function\")\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction useRender(Component, props, ref, { latestValues, }, isStatic, forwardMotionProps = false) {\n    const useVisualProps = isSVGComponent(Component)\n        ? useSVGProps\n        : useHTMLProps;\n    const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n    const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n    const elementProps = Component !== Fragment ? { ...filteredProps, ...visualProps, ref } : {};\n    /**\n     * If component has been handed a motion value as its child,\n     * memoise its initial value and render that. Subsequent updates\n     * will be handled by the onChange handler\n     */\n    const { children } = props;\n    const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n    return createElement(Component, {\n        ...elementProps,\n        children: renderedChildren,\n    });\n}\n\nexport { useRender };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\n\nexport { makeUseVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useHTMLVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps,\n    createRenderState: createHtmlRenderState,\n});\n\nexport { useHTMLVisualState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst useSVGVisualState = /*@__PURE__*/ makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n});\n\nexport { useSVGVisualState };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement =\n        createVisualElement ||\n            lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        visualElement.scheduleRenderMicrotask();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n        /**\n         * Now we've finished triggering animations for this element we\n         * can wipe the enteringChildren set for the next render.\n         */\n        visualElement.enteringChildren = undefined;\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { useRender } from '../render/dom/use-render.mjs';\nimport { isSVGComponent } from '../render/dom/utils/is-svg-component.mjs';\nimport { useHTMLVisualState } from '../render/html/use-html-visual-state.mjs';\nimport { useSVGVisualState } from '../render/svg/use-svg-visual-state.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent(Component, { forwardMotionProps = false } = {}, preloadedFeatures, createVisualElement) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    const useVisualState = isSVGComponent(Component)\n        ? useSVGVisualState\n        : useHTMLVisualState;\n    function MotionDOMComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, forwardMotionProps)] }));\n    }\n    MotionDOMComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionDOMComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage, \"lazy-strict-mode\")\n            : invariant(false, strictMessage, \"lazy-strict-mode\");\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { warnOnce } from 'motion-utils';\nimport { createMotionComponent } from '../../motion/index.mjs';\n\nfunction createMotionProxy(preloadedFeatures, createVisualElement) {\n    if (typeof Proxy === \"undefined\") {\n        return createMotionComponent;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const factory = (Component, options) => {\n        return createMotionComponent(Component, options, preloadedFeatures, createVisualElement);\n    };\n    /**\n     * Support for deprecated`motion(Component)` pattern\n     */\n    const deprecatedFactoryFunction = (Component, options) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return factory(Component, options);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return factory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, createMotionComponent(key, undefined, preloadedFeatures, createVisualElement));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","function makeAnimationInstant(options) {\n    options.duration = 0;\n    options.type === \"keyframes\";\n}\n\nexport { makeAnimationInstant };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`, \"color-not-animatable\");\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`, \"complex-values-different\");\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += Math.round(easing(i / (numPoints - 1)) * 10000) / 10000 + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\", \"spring-duration-limit\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticeably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`, \"cubic-bezier-length\");\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`, \"invalid-easing-type\");\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\", \"range-length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`, \"spring-two-frames\");\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `Mini animate() doesn't support \"type\" as a string.`, \"mini-spring\");\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys that might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    const subject = motionValue?.owner?.current;\n    /**\n     * We use this check instead of isHTMLElement() because we explicitly\n     * **don't** want elements in different timing contexts (i.e. popups)\n     * to be accelerated, as it's not possible to sync these animations\n     * properly with those driven from the main window frameloop.\n     */\n    if (!(subject instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { makeAnimationInstant } from './utils/make-animation-instant.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            makeAnimationInstant(options);\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". \"${isOriginAnimatable ? targetKeyframe : originKeyframe}\" is not an animatable value.`, \"value-not-animatable\");\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, makeAnimationInstant, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        makeAnimationInstant(options);\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        makeAnimationInstant(options);\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","function calcChildStagger(children, child, delayChildren, staggerChildren = 0, staggerDirection = 1) {\n    const index = Array.from(children)\n        .sort((a, b) => a.sortNodePosition(b))\n        .indexOf(child);\n    const numChildren = children.size;\n    const maxStaggerDuration = (numChildren - 1) * staggerChildren;\n    const delayIsFunction = typeof delayChildren === \"function\";\n    return delayIsFunction\n        ? delayChildren(index, numChildren)\n        : staggerDirection === 1\n            ? index * staggerChildren\n            : maxStaggerDuration - index * staggerChildren;\n}\n\nexport { calcChildStagger };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { calcChildStagger } from '../utils/calc-child-stagger.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, forwardDelay, delayChildren, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delay = 0, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    for (const child of visualElement.variantChildren) {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delay +\n                (typeof delayChildren === \"function\" ? 0 : delayChildren) +\n                calcChildStagger(visualElement.variantChildren, child, delayChildren, staggerChildren, staggerDirection),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    }\n    return Promise.all(animations);\n}\n\nexport { animateVariant };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { calcChildStagger } from '../../animation/utils/calc-child-stagger.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => {\n                    const options = { type };\n                    /**\n                     * If we're performing the initial animation, but we're not\n                     * rendering at the same time as the variant-controlling parent,\n                     * we want to use the parent's transition to calculate the stagger.\n                     */\n                    if (typeof animation === \"string\" &&\n                        isInitialRender &&\n                        !willAnimateViaParent &&\n                        visualElement.manuallyAnimateOnMount &&\n                        visualElement.parent) {\n                        const { parent } = visualElement;\n                        const parentVariant = resolveVariant(parent, animation);\n                        if (parent.enteringChildren && parentVariant) {\n                            const { delayChildren } = parentVariant.transition || {};\n                            options.delay = calcChildStagger(parent.enteringChildren, visualElement, delayChildren);\n                        }\n                    }\n                    return {\n                        animation: animation,\n                        options,\n                    };\n                }));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow = window, dragSnapToOrigin = false, distanceThreshold = 3, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursor.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= this.distanceThreshold;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.distanceThreshold = distanceThreshold;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        /**\n         * The latest pointer event. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPointerEvent = null;\n        /**\n         * The latest pan info. Used as fallback when the `cancel` and `stop` functions are called without arguments.\n         */\n        this.latestPanInfo = null;\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false, distanceThreshold } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => {\n            this.latestPointerEvent = event;\n            this.latestPanInfo = info;\n            this.stop(event, info);\n            this.latestPointerEvent = null;\n            this.latestPanInfo = null;\n        };\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            distanceThreshold,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    /**\n     * @internal\n     */\n    stop(event, panInfo) {\n        const finalEvent = event || this.latestPointerEvent;\n        const finalPanInfo = panInfo || this.latestPanInfo;\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging || !finalPanInfo || !finalEvent)\n            return;\n        const { velocity } = finalPanInfo;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(finalEvent, finalPanInfo));\n        }\n    }\n    /**\n     * @internal\n     */\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\", \"drag-constraints-ref\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\n/**\n * Track whether we've taken any snapshots yet. If not,\n * we can safely skip notification of didUpdate.\n *\n * Difficult to capture in a test but to prevent flickering\n * we must set this to true either on update or unmount.\n * Running `next-env/layout-id` in Safari will show this behaviour if broken.\n */\nlet hasTakenAnySnapshot = false;\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            if (hasTakenAnySnapshot) {\n                projection.root.didUpdate();\n            }\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        hasTakenAnySnapshot = true;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        hasTakenAnySnapshot = true;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, frame, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            this.animationCommitId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                let innerWidth = 0;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                // Set initial innerWidth in a frame.read callback to batch the read\n                frame.read(() => {\n                    innerWidth = window.innerWidth;\n                });\n                attachResizeListener(instance, () => {\n                    const newInnerWidth = window.innerWidth;\n                    if (newInnerWidth === innerWidth)\n                        return;\n                    innerWidth = newInnerWidth;\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            /**\n             * If this is a repeat of didUpdate then ignore the animation.\n             */\n            if (this.animationId <= this.animationCommitId) {\n                this.nodes.forEach(clearIsLayoutDirty);\n                return;\n            }\n            this.animationCommitId = this.animationId;\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            else {\n                this.isUpdating = false;\n                /**\n                 * Write\n                 */\n                this.nodes.forEach(resetTransformStyle);\n                /**\n                 * Read ==================\n                 */\n                // Update layout measurements of updated children\n                this.nodes.forEach(updateLayout);\n                /**\n                 * Write\n                 */\n                // Notify listeners that the layout is updated\n                this.nodes.forEach(notifyLayoutUpdate);\n            }\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    velocity: 0,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        applyProjectionStyles(targetStyle, // CSSStyleDeclaration - doesn't allow numbers to be assigned to properties\n        styleProp) {\n            if (!this.instance || this.isSVG)\n                return;\n            if (!this.isVisible) {\n                targetStyle.visibility = \"hidden\";\n                return;\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                targetStyle.visibility = \"\";\n                targetStyle.opacity = \"\";\n                targetStyle.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                targetStyle.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                if (this.options.layoutId) {\n                    targetStyle.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    targetStyle.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    targetStyle.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return;\n            }\n            targetStyle.visibility = \"\";\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            let transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                transform = transformTemplate(valuesToRender, transform);\n            }\n            targetStyle.transform = transform;\n            const { x, y } = this.projectionDelta;\n            targetStyle.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                targetStyle.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        targetStyle[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        targetStyle[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                targetStyle.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { createProjectionNode } from './create-projection-node.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createDomVisualElement } from '../../dom/create-visual-element.mjs';\nimport { createMotionProxy } from '../create-proxy.mjs';\nimport { featureBundle } from './feature-bundle.mjs';\n\nconst motion = /*@__PURE__*/ createMotionProxy(featureBundle, createDomVisualElement);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n\nexport { featureBundle };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { isHTMLElement } from 'motion-dom';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = isHTMLElement(parent)\n                ? parent.offsetWidth || 0\n                : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX, root }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        const parent = root ?? document.head;\n        parent.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            if (parent.contains(style)) {\n                parent.removeChild(style);\n            }\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, root }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    let isReusedContext = true;\n    let context = useMemo(() => {\n        isReusedContext = false;\n        return {\n            id,\n            initial,\n            isPresent,\n            custom,\n            onExitComplete: (childId) => {\n                presenceChildren.set(childId, true);\n                for (const isComplete of presenceChildren.values()) {\n                    if (!isComplete)\n                        return; // can stop searching when any is incomplete\n                }\n                onExitComplete && onExitComplete();\n            },\n            register: (childId) => {\n                presenceChildren.set(childId, false);\n                return () => presenceChildren.delete(childId);\n            },\n        };\n    }, [isPresent, presenceChildren, onExitComplete]);\n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    if (presenceAffectsLayout && isReusedContext) {\n        context = { ...context };\n    }\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, root: root, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", root }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender?.();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && safeToRemove?.();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, root: root, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","LayoutGroupContext","useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","isObject","value","transformPropOrder","transformProps","Set","radToDeg","rad","Math","PI","rotate","v","angle","atan2","rebaseAngle","matrix2dParsers","x","y","translateX","translateY","scaleX","scaleY","scale","abs","rotateZ","skewX","atan","skewY","skew","sqrt","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","transform","matrix3dMatch","match","parsers","matrix2dMatch","valueParser","values","split","map","convertTransformToNumber","parseFloat","trim","checkStringStartsWith","token","key","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","convertBoundingBoxToBox","_ref","top","left","right","bottom","min","max","mixNumber","from","to","progress","isIdentityScale","undefined","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","point","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","arguments","length","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","originX","originY","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","positionalKeys","clamp","number","parse","alpha","_objectSpread","default","createUnitType","unit","endsWith","concat","degrees","percent","px","vh","vw","progressPercentage","testValueType","type","dimensionValueTypes","findDimensionValueType","find","isNumericalString","splitCSSVariableRegex","getVariableValue","current","element","depth","fallback","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","filter","has","positionalValues","width","_ref2","paddingLeft","paddingRight","height","_ref3","_ref4","paddingTop","paddingBottom","_bbox","_ref5","_ref6","_ref7","_ref8","_ref9","_ref0","_ref1","_ref10","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","forEach","frameloop","push","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","keepAlive","immediate","i","frame","cancelFrame","frameSteps","requestAnimationFrame","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","Array","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","Map","removedTransforms","visualElement","getValue","get","set","removeNonTranslationalTransform","measureInitialState","restore","_element$getValue","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","motionValue","isAsync","this","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","keyframes","_keyframes$i","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","isZeroValueString","isNone","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","getAnimatableNone","parsed","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_v$match","_v$match2","isNaN","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","int","transformValueTypes","scaleZ","perspective","transformPerspective","opacity","originZ","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","zIndex","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","jump","_this$removedTransfor","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isMotionValue","getVelocity","clearTime","time","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","subscriptions","handler","notify","numSubscriptions","getSize","velocityPerSecond","velocity","frameDuration","collectMotionValues","MotionValue","init","options","canTrackVelocity","events","updateAndNotify","currentTime","_this$events$change","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","endAnimation","_this$events$change2","addDependent","removeDependent","getPrevious","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","_this$dependents","_this$events$destroy","valueTypes","microtask","cancelMicrotask","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","props","some","createBox","prefersReducedMotion","hasReducedMotionListener","visualElementStore","WeakMap","isAnimationControls","isVariantLabel","isArray","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","variants","getValueState","resolveVariantFromProps","definition","custom","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","parent","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","children","shouldReduceMotion","features","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","latestValues","triggerBuild","renderInstance","renderState","style","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","initial","variantChildren","manuallyAnimateOnMount","_this$scrapeMotionVal","willChange","initialMotionValues","_objectWithoutProperties","_excluded","mount","_this$parent","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addEventListener","initPrefersReducedMotion","addChild","unmount","_this$parent2","remove","removeChild","feature","isMounted","child","_this$enteringChildre","enteringChildren","valueIsTransform","onBindTransform","removeOnChange","latestValue","onUpdate","isTransformDirty","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","updateFeatures","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevProps","prevPresenceContext","listener","next","nextValue","prevValue","addValue","hasValue","existingValue","liveStyle","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getProps","getVariant","getDefaultTransition","transition","getTransformPagePoint","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","_this$getBaseTargetFr","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","_this$presenceContext","variant","_len","args","_key","scheduleRenderMicrotask","DOMVisualElement","compareDocumentPosition","vars","childSubscription","latest","textContent","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","transformOrigin","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","renderHTML","styleProp","elementStyle","applyProjectionStyles","setProperty","scaleCorrectors","isForcedMotionValue","layoutId","newValues","_visualElement$getVal","HTMLVisualElement","_this$projection","isProjecting","readTransformValue","computedStyle","camelToDash","str","toLowerCase","dashKeys","offset","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","_attrs$transformOrigi","_styleProp$transformB","spacing","useDashCase","keys","buildSVGPath","camelCaseAttributes","tag","scrapeMotionValuesFromProps$1","charAt","toUpperCase","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","tagName","lowercaseSVGElements","isSVGComponent","Component","createDomVisualElement","allowProjection","Fragment","LazyContext","strict","MotionContext","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","createSvgRenderState","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_unused","useRender","ref","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","createElement","resolveMotionValue","makeLatestValues","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","transitionEnd","valueTarget","makeUseVisualState","config","PresenceContext","make","createRenderState","makeState","useConstant","useHTMLVisualState","useSVGVisualState","motionComponentSymbol","Symbol","for","isRefObject","useMotionRef","externalRef","useCallback","onMount","optimizedAppearDataAttribute","SwitchLayoutGroupContext","useVisualElement","createVisualElement","ProjectionNodeConstructor","_window$MotionHandoff","_window","_window$MotionHasOpti","_window2","lazyContext","visualElementRef","useRef","renderer","initialLayoutGroupConfig","initialPromotionConfig","dragConstraints","layoutScroll","layoutRoot","layoutCrossfade","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","crossfade","createProjectionNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","animationState","animateChanges","_window$MotionHandoff2","_window3","MotionHandoffMarkAsComplete","createMotionComponent","_Component$displayNam","preloadedFeatures","loadFeatures","useVisualState","MotionDOMComponent","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","jsx","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","id","createMotionProxy","Proxy","componentCache","factory","deprecatedFactoryFunction","_target","resolveVariant","getValueTransition","_transition$key","isKeyframesTarget","setMotionValue","resolveFinalValueInKeyframes","addValueToWillChange","WillChange","newWillChange","getOptimisedAppearId","makeAnimationInstant","duration","combineFunctions","pipe","transformers","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","mainThread","waapi","hueToRgb","q","t","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","_origin$values$origin","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","root","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","repeat","repeatType","speed","resolvedKeyframes","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","startTime","isStopped","holdTime","playbackSpeed","_this$options$onStop","_this$options","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","_this$driver","driver","newSpeed","hasChanged","_this$options$onPlay","_this$options2","onPlay","_this$options$onCompl","_this$options3","_this$options$onCance","_this$options4","onCancel","stopDriver","sampleTime","attachTimeline","timeline","_this$driver2","allowFlatten","observe","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","_supportsFlags$suppor","supportsLinearEasing","document","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","_options$duration","_options$ease","applyGeneratorOptions","onfinish","updateMotionValue","isCSSVar","setStyle","_this$animation$finis","_this$animation","commitStyles","_this$animation$commi","_this$animation2","_this$animation$effec","_this$animation$effec2","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","_this$animation$effec3","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","_this$finishedTime","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_this$keyframeResolve2","_this$keyframeResolve","_this$stopTimeline","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","_motionValue$owner","HTMLElement","supportsBrowserAnimation","catch","pendingTimeline","_onReject","_this$keyframeResolve3","_this$keyframeResolve4","underDampedSpring","keyframesTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","_visualElement$latest","MotionHandoffAnimation","appearId","all","setTarget","calcChildStagger","sort","numChildren","size","maxStaggerDuration","animateVariant","_visualElement$presen","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","shallowCompare","prevLength","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","willAnimateViaParent","parentVariant","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setActive","_visualElement$varian","_child$animationState","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","_this$unmountControls","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pageX","pageY","addPointerEvent","addPointerInfo","calcLength","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","eachAxis","getContextWindow","ownerDocument","defaultView","PanSession","handlers","contextWindow","dragSnapToOrigin","distanceThreshold","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","latestPointerEvent","latestPanInfo","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","_this$getAxisMotionVa","getAnimationState","finalEvent","finalPanInfo","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","_this$visualElement$p","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this$getAxisMotionVa2","_this$getAxisMotionVa3","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","hasTakenAnySnapshot","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","usePresence","applyTo","boxShadow","isSVGElement","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","animationCommitId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","innerWidth","resizeUnblockUpdate","newInnerWidth","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","_this$scroll","checkNodeWasScrollRoot","_this$scroll2","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","_this$options$visualE","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","_lead$opacity","_follow$opacity","opacityExit","_follow$opacity2","_lead$opacity2","borderLabel","followRadius","leadRadius","mixValues","_this$currentAnimatio","_this$resumingFrom","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","_this$getStack","getPrevLead","_this$getStack2","hasDistortingTransform","resetValues","targetStyle","visibility","pointerEvents","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","_valuesToRender$opaci","corrected","num","resetTree","_node$currentAnimatio","_node$resumeFrom","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","_node$scroll","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","_selectorCache$elemen","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","isHTMLElement","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","_element","globalTapTarget","onFocus","isFocusVisible","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","motion","PopChildMeasure","React","childRef","offsetParent","parentWidth","offsetWidth","sizeRef","offsetHeight","offsetTop","offsetLeft","PopChild","anchorX","useId","nonce","dataset","motionPopId","head","appendChild","sheet","insertRule","contains","PresenceChild","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","isReusedContext","childId","isComplete","_","getChildKey","onlyElements","filtered","Children","isValidElement","AnimatePresence","propagate","isParentPresent","presentChildren","presentKeys","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","setRenderedChildren","exitingChildren","nextChildren","forceRender","onExit","isEveryExitComplete","isExitComplete"],"sourceRoot":""}